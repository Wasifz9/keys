{"version":3,"sources":["Projects.js","App.js","reportWebVitals.js","index.js"],"names":["Projects","sections","useKey","key","callback","cbRef","useRef","useEffect","current","handle","event","code","document","addEventListener","removeEventListener","App","useState","highlighted","setHighlighted","selected","setSelected","length","className","map","section","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0LAQeA,ICDTC,EAAW,CAAC,WAAW,aAAc,QAAS,QAAS,UAE7D,SAASC,EAAOC,EAAKC,GACnB,IAAMC,EAAQC,iBAAOF,GAErBG,qBAAW,WACTF,EAAMG,QAAUJ,KAGlBG,qBAAW,WACT,SAASE,EAAQC,GACXA,EAAMC,OAASR,GACjBE,EAAMG,QAAQE,GAKlB,OADAE,SAASC,iBAAiB,WAAYJ,GAC/B,kBAAMG,SAASE,oBAAoB,WAAYL,MAErD,CAACN,IA8DSY,MAzDb,WAAgB,IAAD,EAEyBC,mBAAS,GAFlC,mBAENC,EAFM,KAEOC,EAFP,OAGmBF,mBAAS,gCAH5B,mBAGNG,EAHM,KAGIC,EAHJ,KA6Bb,OAJAlB,EAAO,QApBP,WAEIgB,EADkB,IAAhBD,EACahB,EAASoB,OAAS,EAElBJ,EAAc,MAiBjCf,EAAO,SALP,WACEkB,EAAYnB,EAASgB,OAKvBf,EAAO,QAdP,WACMe,IAAgBhB,EAASoB,OAAO,EAClCH,EAAe,GAEfA,EAAeD,EAAc,MAc/B,sBAAKK,UAAU,MAAf,UACI,sBAAKA,UAAY,MAAjB,UACE,oDACA,wCACA,6BACGrB,EAASsB,KAAI,SAACC,EAASC,GAAV,OACZ,6BAGE,sBACAH,UAAaG,IAAMR,EAAc,SAAW,KAD5C,gBAEKO,MAJEC,WAYjB,qBAAKH,UAAY,UAAjB,SACI,mCAAMH,EAAN,aCtEGO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,SAM1BZ,K","file":"static/js/main.51bf13d9.chunk.js","sourcesContent":["function Projects () {\r\n    return (\r\n        <>\r\n            hello\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Projects; ","\nimport './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport Projects from './Projects.js';\n\n// make each of these their own component with nested menu items that animate open on select\n// elements of array will be their own react componenets \nconst sections = ['projects','experience', 'games', 'ideas', 'resume']\n\nfunction useKey(key, callback){\n  const cbRef = useRef(callback);\n\n  useEffect (() => {\n    cbRef.current = callback; \n  })\n\n  useEffect (() => {\n    function handle (event){\n      if (event.code === key){\n        cbRef.current(event);\n      }\n    }\n\n    document.addEventListener(\"keypress\", handle);\n    return () => document.removeEventListener(\"keypress\", handle)\n\n  }, [key]);\n\n}\n\n\n  function App() {\n\n    const [highlighted, setHighlighted] = useState(0);\n    const [selected, setSelected] = useState(\"use 'w' and 's' to navigate.\");\n\n    function handleUp(){\n      if (highlighted === 0){\n        setHighlighted(sections.length - 1)\n      } else{\n        setHighlighted(highlighted - 1);\n      }\n    }\n    \n    function handleDown (){\n      if (highlighted === sections.length-1){\n        setHighlighted(0)\n      }else {\n        setHighlighted(highlighted + 1);\n      }\n    }\n    \n    function handleEnter(){\n      setSelected(sections[highlighted]);\n    }\n    \n    useKey(\"KeyW\", handleUp);\n    useKey(\"Enter\", handleEnter);\n    useKey(\"KeyS\", handleDown);\n    \n    return (\n      \n      <div className=\"App\">\n          <div className = \"nav\">\n            <h1> Wasif Zulkernine </h1>\n            <h2> > me </h2>\n            <ul> \n              {sections.map((section, i)=> (\n                <li \n                  key = {i}\n                > \n                  <div \n                  className = {i === highlighted ? 'active' : null}\n                  > > {section}\n                </div> \n\n                \n                </li>\n              ))}\n            </ul>\n        </div>\n        <div className = \"content\">\n            <h1> {selected} </h1>\n        </div>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}